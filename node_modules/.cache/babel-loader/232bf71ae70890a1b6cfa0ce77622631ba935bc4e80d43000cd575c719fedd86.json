{"ast":null,"code":"const list = async () => {\n  try {\n    const response = await fetch(\"http://localhost:5000/steps\", {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    });\n    const responseJson = await response.json();\n    return responseJson;\n  } catch (error) {\n    console.log(error);\n    return false;\n  }\n};\nconst show = async id => {\n  try {\n    const response = await fetch(`http://localhost:5000/steps/${id}`, {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    });\n    const responseJson = await response.json();\n    return responseJson;\n  } catch (error) {\n    console.log(error);\n    return false;\n  }\n};\nconst create = async data => {\n  try {\n    const response = await fetch(\"http://localhost:5000/steps\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(data)\n    });\n    const responseJson = await response.json();\n    return responseJson;\n  } catch (error) {\n    console.log(error);\n    return false;\n  }\n};\nconst update = async (data, id) => {\n  try {\n    const response = await fetch(`http://localhost:5000/steps/${id}`, {\n      method: \"PUT\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(data)\n    });\n    const responseJson = await response.json();\n    return responseJson;\n  } catch (error) {\n    console.log(error);\n    return false;\n  }\n};\nconst destroy = async id => {\n  try {\n    const response = await fetch(`http://localhost:5000/steps/${id}`, {\n      method: \"DELETE\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    });\n    await response.json();\n    return true;\n  } catch (error) {\n    console.log(error);\n    return false;\n  }\n};\nconst services = {\n  list,\n  show,\n  create,\n  update,\n  destroy\n};\nexport default services;","map":{"version":3,"names":["list","response","fetch","method","headers","responseJson","json","error","console","log","show","id","create","data","body","JSON","stringify","update","destroy","services"],"sources":["C:/Users/Caio/FinalProject/Front/WhereToGo-Front/src/services/steps/index.js"],"sourcesContent":["const list = async () => {\r\n  try {\r\n    const response = await fetch(\"http://localhost:5000/steps\", {\r\n      method: \"GET\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    });\r\n\r\n    const responseJson = await response.json();\r\n    return responseJson;\r\n  } catch (error) {\r\n    console.log(error);\r\n    return false;\r\n  }\r\n};\r\n\r\nconst show = async (id) => {\r\n  try {\r\n    const response = await fetch(`http://localhost:5000/steps/${id}`, {\r\n      method: \"GET\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    });\r\n\r\n    const responseJson = await response.json();\r\n    return responseJson;\r\n  } catch (error) {\r\n    console.log(error);\r\n    return false;\r\n  }\r\n};\r\n\r\nconst create = async (data) => {\r\n  try {\r\n    const response = await fetch(\"http://localhost:5000/steps\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify(data),\r\n    });\r\n\r\n    const responseJson = await response.json();\r\n    return responseJson;\r\n  } catch (error) {\r\n    console.log(error);\r\n    return false;\r\n  }\r\n};\r\n\r\nconst update = async (data, id) => {\r\n  try {\r\n    const response = await fetch(`http://localhost:5000/steps/${id}`, {\r\n      method: \"PUT\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify(data),\r\n    });\r\n\r\n    const responseJson = await response.json();\r\n    return responseJson;\r\n  } catch (error) {\r\n    console.log(error);\r\n    return false;\r\n  }\r\n};\r\n\r\nconst destroy = async (id) => {\r\n  try {\r\n    const response = await fetch(`http://localhost:5000/steps/${id}`, {\r\n      method: \"DELETE\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    });\r\n\r\n    await response.json();\r\n    return true;\r\n  } catch (error) {\r\n    console.log(error);\r\n    return false;\r\n  }\r\n};\r\n\r\nconst services = {\r\n  list,\r\n  show,\r\n  create,\r\n  update,\r\n  destroy,\r\n};\r\n\r\nexport default services;\r\n"],"mappings":"AAAA,MAAMA,IAAI,GAAG,YAAY;EACvB,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,6BAA6B,EAAE;MAC1DC,MAAM,EAAE,KAAK;MACbC,OAAO,EAAE;QACP,cAAc,EAAE;MAClB;IACF,CAAC,CAAC;IAEF,MAAMC,YAAY,GAAG,MAAMJ,QAAQ,CAACK,IAAI,EAAE;IAC1C,OAAOD,YAAY;EACrB,CAAC,CAAC,OAAOE,KAAK,EAAE;IACdC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;IAClB,OAAO,KAAK;EACd;AACF,CAAC;AAED,MAAMG,IAAI,GAAG,MAAOC,EAAE,IAAK;EACzB,IAAI;IACF,MAAMV,QAAQ,GAAG,MAAMC,KAAK,CAAE,+BAA8BS,EAAG,EAAC,EAAE;MAChER,MAAM,EAAE,KAAK;MACbC,OAAO,EAAE;QACP,cAAc,EAAE;MAClB;IACF,CAAC,CAAC;IAEF,MAAMC,YAAY,GAAG,MAAMJ,QAAQ,CAACK,IAAI,EAAE;IAC1C,OAAOD,YAAY;EACrB,CAAC,CAAC,OAAOE,KAAK,EAAE;IACdC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;IAClB,OAAO,KAAK;EACd;AACF,CAAC;AAED,MAAMK,MAAM,GAAG,MAAOC,IAAI,IAAK;EAC7B,IAAI;IACF,MAAMZ,QAAQ,GAAG,MAAMC,KAAK,CAAC,6BAA6B,EAAE;MAC1DC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACP,cAAc,EAAE;MAClB,CAAC;MACDU,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACH,IAAI;IAC3B,CAAC,CAAC;IAEF,MAAMR,YAAY,GAAG,MAAMJ,QAAQ,CAACK,IAAI,EAAE;IAC1C,OAAOD,YAAY;EACrB,CAAC,CAAC,OAAOE,KAAK,EAAE;IACdC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;IAClB,OAAO,KAAK;EACd;AACF,CAAC;AAED,MAAMU,MAAM,GAAG,OAAOJ,IAAI,EAAEF,EAAE,KAAK;EACjC,IAAI;IACF,MAAMV,QAAQ,GAAG,MAAMC,KAAK,CAAE,+BAA8BS,EAAG,EAAC,EAAE;MAChER,MAAM,EAAE,KAAK;MACbC,OAAO,EAAE;QACP,cAAc,EAAE;MAClB,CAAC;MACDU,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACH,IAAI;IAC3B,CAAC,CAAC;IAEF,MAAMR,YAAY,GAAG,MAAMJ,QAAQ,CAACK,IAAI,EAAE;IAC1C,OAAOD,YAAY;EACrB,CAAC,CAAC,OAAOE,KAAK,EAAE;IACdC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;IAClB,OAAO,KAAK;EACd;AACF,CAAC;AAED,MAAMW,OAAO,GAAG,MAAOP,EAAE,IAAK;EAC5B,IAAI;IACF,MAAMV,QAAQ,GAAG,MAAMC,KAAK,CAAE,+BAA8BS,EAAG,EAAC,EAAE;MAChER,MAAM,EAAE,QAAQ;MAChBC,OAAO,EAAE;QACP,cAAc,EAAE;MAClB;IACF,CAAC,CAAC;IAEF,MAAMH,QAAQ,CAACK,IAAI,EAAE;IACrB,OAAO,IAAI;EACb,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;IAClB,OAAO,KAAK;EACd;AACF,CAAC;AAED,MAAMY,QAAQ,GAAG;EACfnB,IAAI;EACJU,IAAI;EACJE,MAAM;EACNK,MAAM;EACNC;AACF,CAAC;AAED,eAAeC,QAAQ"},"metadata":{},"sourceType":"module","externalDependencies":[]}